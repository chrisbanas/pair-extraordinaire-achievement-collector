name: Automate Pair Extraordinaire

on:
  workflow_dispatch:

jobs:
  coauthored-prs:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Ensure the dev branch exists and sync with the remote
      - name: Ensure Dev Branch Exists and Sync
        run: |
          if git ls-remote --exit-code --heads origin dev; then
            # Branch exists on remote, fetch and check it out
            git fetch origin dev
            git checkout dev
            git reset --hard origin/dev
          else
            # Branch does not exist, create and push it
            git checkout -b dev
            git push -u origin dev
          fi

      # Set up Git configuration
      - name: Set Up Git
        run: |
          git config --global user.name "chrisbanas"
          git config --global user.email "bananas595@gmail.com"

      # Install GitHub CLI
      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      # Authenticate with Personal Access Token
      - name: Authenticate GitHub CLI as User
        env:
          GITHUB_TOKEN: ""  # Clear default token
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          echo "${{ secrets.PERSONAL_ACCESS_TOKEN }}" | gh auth login --with-token

      # Automate Coauthored PRs
      - name: Automate Coauthored PRs
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          COAUTHOR_NAME: "cblogik"
          COAUTHOR_EMAIL: "cbanas@logik.io"
        run: |
          for i in {1..48}
          do
            branch_name="automated-branch-$i"
            tracker_file="coauthored_merged_prs.txt"

            # Create a new branch
            git checkout -b $branch_name

            # Update or initialize the tracker file
            if [ -f "$tracker_file" ]; then
              current_count=$(grep -oP '\d+' $tracker_file || echo 0)
              new_count=$((current_count + 1))
            else
              new_count=1
            fi

            echo "Coauthored merged pull request #: $new_count" > $tracker_file

            # Commit the change with co-authorship
            git add $tracker_file
            git commit -m "Update coauthored PR count to #$new_count

            Co-authored-by: ${COAUTHOR_NAME} <${COAUTHOR_EMAIL}>
            Co-authored-by: Chris Banas <bananas595@gmail.com>" \
              --author "Chris Banas <bananas595@gmail.com>"

            # Push the branch
            git push origin $branch_name

            # Create a PR using gh CLI
            pr_url=$(gh pr create --base main --head $branch_name \
              --title "Automated Coauthored PR #$new_count" \
              --body "This is an automated coauthored pull request.")

            # Merge the PR using gh CLI
            gh pr merge --squash --delete-branch --admin $pr_url

            # Optional: Sleep to avoid rate limits or conflicts
            sleep $((RANDOM % 3 + 1))
          done
